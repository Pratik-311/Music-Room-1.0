version: "3"
services:
  backend:
    container_name: backend
    build: backend
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - static:/static
    env_file:
      - .env
    networks:
      - internal
    depends_on:
      db:
        condition: service_started
    command: sh -c "python manage.py collectstatic; python manage.py wait_for_db && python manage.py migrate && gunicorn music_room.wsgi --bind 0.0.0.0:8000" 
  frontend:
    container_name: frontend
    build: frontend
    volumes:
      - react_build:/frontend/dist
    networks:
      - internal
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:8080"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
      - static:/static/
    networks:
      - internal
    depends_on:
      - backend
      - frontend
  db:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data
    networks:
      - internal
    environment:
      POSTGRES_DB: "music_room"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "${DB_USER_PASSWORD}"
volumes:
  static:
  react_build:
  data:
networks:
  internal:
    driver: bridge